{"version":3,"sources":["../node_modules/bindings sync","store/constants/index.js","store/actions/getInfoActions.js","sagas/constants.js","utils/APIUtils/getInfoScorocode.js","sagas/getEquipmentSaga.js","sagas/getStructureSaga.js","utils/APIUtils/editEquipScorocode.js","sagas/editEquipmentSaga.js","utils/APIUtils/deleteEquipScorocode.js","sagas/deleteEquipmentSaga.js","utils/APIUtils/addEquipScorocode.js","sagas/addEquipmentSaga.js","sagas/watchSagas.js","sagas/rootSaga.js","utils/APIUtils/auth.js","store/reducers/setReducer.js","components/Header/index.jsx","components/Footer/index.jsx","utils/supportUtils/idArrayCreator.js","components/SmallButton/index.jsx","components/styleConstants.js","components/StructureUnit/index.jsx","store/actions/equipmentActions.js","components/StructureList/index.jsx","components/QuantityInput/index.jsx","components/EquipmentUnit/index.jsx","components/TextInput/index.jsx","components/AddUnit/index.jsx","components/EquipmentList/index.jsx","components/Containers/EquipmentListContainer/index.jsx","components/Containers/ListContainer/index.jsx","App.jsx","store/configureStore.js","index.jsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ADD_EQUIPMENT","DELETE_EQUIPMENT","EDIT_EQUIPMENT","setEquipment","equipment","type","BUILDINGS","EQUIPMENT","infoField","a","archive","Scorocode","Query","find","isFound","result","reduce","accum","next","_id","name","room","count","map","building","mapedBuilding","rooms","mapedRoom","children","child","console","log","getEquipmentSaga","getInfo","call","getInfoScorocode","put","getStructureSaga","setStructure","structure","editEquipScorocode","quantity","record","Object","parseInt","set","save","editEquipmentSaga","select","state","postItemData","editItemData","deleteEquipScorocode","getById","item","remove","deleteEquipmentSaga","itemData","addEquipScorocode","addEquipmentSaga","isRoom","roomData","addItemData","watchEditSaga","watchDeleteSaga","watchAddSaga","takeEvery","rootSaga","all","setReducer","showEquipArray","isAddingOn","action","idArray","data","isAdding","Header","className","Footer","href","idArrayCreator","unit","push","forEach","elem","SmallButton","style","onClick","RED","connect","dispatch","showRelEquipment","showEquipment","setIsRoom","setRoom","StructureUnit","useState","isOpened","setIsOpened","backgroundColor","htmlFor","disabled","onChange","equipIdArray","length","key","StructureList","structureUnit","unitList","QuantityInput","readOnly","value","min","editEquipQuantity","editEquipment","deleteEquipmentItem","deleteEquipment","setQuantity","isEditable","setEditable","target","TextInput","isInputError","placeholder","addNewEquipment","addEquipment","handleCancel","handleClickAddButton","setName","error","setError","match","setIsAddingOn","startText","equipmentUnit","setIsAdding","addUnit","equipUnitList","entries","includes","Init","ApplicationID","JavaScriptKey","MasterKey","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","runSaga","run","configureStore","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.d05bbeb7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 127;","export const SET_STRUCTURE = \"SET_STRUCTURE\";\nexport const SET_EQUIPMENT = \"SET_EQUIPMENT\";\nexport const ADD_EQUIPMENT = \"ADD_EQUIPMENT\";\nexport const DELETE_EQUIPMENT = \"DELETE_EQUIPMENT\";\nexport const EDIT_EQUIPMENT = \"EDIT_EQUIPMENT\";\nexport const SHOW_EQUIPMENT = \"SHOW_EQUIPMENT\";\nexport const SET_IS_ROOM = \"SET_IS_ROOM\";\nexport const SET_IS_ADDING = \"SET_IS_ADDING\";\n","import { SET_EQUIPMENT, SET_STRUCTURE } from \"../constants\";\n\nconst setStructure = structure => ({\n  type: SET_STRUCTURE,\n  structure\n});\n\nconst setEquipment = equipment => ({\n  type: SET_EQUIPMENT,\n  equipment\n});\n\nexport { setStructure, setEquipment };\n","export const BUILDINGS = \"buildings\";\r\nexport const EQUIPMENT = \"equipment\";\r\n","import Scorocode from \"scorocode\";\nimport { BUILDINGS, EQUIPMENT } from \"../../sagas/constants\";\n\nconst equipMap = equipArray => {\n  return equipArray.reduce((accum, next) => {\n    const { _id, name, room, count } = next;\n    accum[next.room] = accum[next.room]\n      ? [\n          ...accum[next.room],\n          {\n            id: _id,\n            name,\n            room,\n            count\n          }\n        ]\n      : [\n          {\n            id: _id,\n            name,\n            room,\n            count\n          }\n        ];\n    return accum;\n  }, {});\n};\n\nconst structureMap = structureArray => {\n  return structureArray.map(building => {\n    const mapedBuilding = {\n      id: building._id,\n      name: building.name\n    };\n    if (building.rooms)\n      mapedBuilding.rooms = building.rooms.map(room => {\n        const mapedRoom = {\n          id: room.id,\n          name: room.name\n        };\n        if (room.children)\n          mapedRoom.rooms = room.children.map(child => ({\n            id: child.id,\n            name: child.name\n          }));\n        return mapedRoom;\n      });\n    return mapedBuilding;\n  });\n};\n\nexport default async infoField => {\n  try {\n    const archive = new Scorocode.Query(infoField);\n    const isFound = await archive.find();\n    switch (infoField) {\n      case EQUIPMENT:\n        return equipMap(isFound.result);\n      case BUILDINGS:\n        return structureMap(isFound.result);\n      default:\n        return [];\n    }\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n","import { put, call } from \"redux-saga/effects\";\nimport * as getInfo from \"../store/actions/getInfoActions\";\nimport getInfoScorocode from \"../utils/APIUtils/getInfoScorocode\";\nimport { EQUIPMENT } from \"./constants\";\n\nconst { setEquipment } = getInfo;\nexport default function* getEquipmentSaga() {\n  const equipment = yield call(getInfoScorocode, EQUIPMENT);\n  yield put(setEquipment(equipment));\n}\n","import { put, call } from \"redux-saga/effects\";\nimport * as getInfo from \"../store/actions/getInfoActions\";\nimport getInfoScorocode from \"../utils/APIUtils/getInfoScorocode\";\nimport { BUILDINGS } from \"./constants\";\n\nconst { setStructure } = getInfo;\nexport default function* getStructureSaga() {\n  const structure = yield call(getInfoScorocode, BUILDINGS);\n  yield put(setStructure(structure));\n}\n","import Scorocode from \"scorocode\";\r\n\r\nconst editEquipScorocode = async ({ id, name, quantity }) => {\r\n  const record = new Scorocode.Object(\"equipment\");\r\n  const count = parseInt(quantity, 10);\r\n  record\r\n    .set(\"_id\", id)\r\n    .set(\"name\", name)\r\n    .set(\"count\", count);\r\n  await record.save();\r\n};\r\n\r\nexport default editEquipScorocode;\r\n","import { put, call, select } from \"redux-saga/effects\";\r\nimport * as getInfo from \"../store/actions/getInfoActions\";\r\nimport editEquipScorocode from \"../utils/APIUtils/editEquipScorocode\";\r\nimport getInfoScorocode from \"../utils/APIUtils/getInfoScorocode\";\r\nimport { EQUIPMENT } from \"./constants\";\r\n\r\nconst { setEquipment } = getInfo;\r\n\r\nexport default function* editEquipmentSaga() {\r\n  const editItemData = yield select(state => state.postItemData);\r\n  yield call(editEquipScorocode, editItemData);\r\n  const equipment = yield call(getInfoScorocode, EQUIPMENT);\r\n  yield put(setEquipment(equipment));\r\n}\r\n","import Scorocode from \"scorocode\";\r\n\r\nconst deleteEquipScorocode = async ({ id }) => {\r\n  const archive = new Scorocode.Object(\"equipment\");\r\n  const item = await archive.getById(id);\r\n  await archive.remove(item);\r\n};\r\n\r\nexport default deleteEquipScorocode;\r\n","import { put, call, select } from \"redux-saga/effects\";\r\nimport * as getInfo from \"../store/actions/getInfoActions\";\r\nimport deleteEquipScorocode from \"../utils/APIUtils/deleteEquipScorocode\";\r\nimport getInfoScorocode from \"../utils/APIUtils/getInfoScorocode\";\r\nimport { EQUIPMENT } from \"./constants\";\r\n\r\nconst { setEquipment } = getInfo;\r\n\r\nexport default function* deleteEquipmentSaga() {\r\n  const itemData = yield select(state => state.postItemData);\r\n\r\n  yield call(deleteEquipScorocode, itemData);\r\n\r\n  const equipment = yield call(getInfoScorocode, EQUIPMENT);\r\n  yield put(setEquipment(equipment));\r\n}\r\n","import Scorocode from \"scorocode\";\r\n\r\nconst addEquipScorocode = async ({ id, name, quantity }) => {\r\n  const record = new Scorocode.Object(\"equipment\");\r\n  const count = parseInt(quantity, 10);\r\n  record\r\n    .set(\"name\", name)\r\n    .set(\"room\", id)\r\n    .set(\"count\", count);\r\n  await record.save();\r\n};\r\n\r\nexport default addEquipScorocode;\r\n","import { put, call, select } from \"redux-saga/effects\";\r\nimport * as getInfo from \"../store/actions/getInfoActions\";\r\nimport addEquipScorocode from \"../utils/APIUtils/addEquipScorocode\";\r\nimport getInfoScorocode from \"../utils/APIUtils/getInfoScorocode\";\r\nimport { EQUIPMENT } from \"./constants\";\r\n\r\nconst { setEquipment } = getInfo;\r\n\r\nexport default function* addEquipmentSaga() {\r\n  const itemData = yield select(state => state.postItemData);\r\n  const roomData = yield select(state => state.isRoom);\r\n  const addItemData = {\r\n    id: roomData,\r\n    name: itemData.name,\r\n    quantity: itemData.quantity\r\n  };\r\n  yield call(addEquipScorocode, addItemData);\r\n  const equipment = yield call(getInfoScorocode, EQUIPMENT);\r\n  yield put(setEquipment(equipment));\r\n}\r\n","import { takeEvery } from \"redux-saga/effects\";\r\nimport editEquipmentSaga from \"./editEquipmentSaga\";\r\nimport deleteEquipmentSaga from \"./deleteEquipmentSaga\";\r\nimport addEquipmentSaga from \"./addEquipmentSaga\";\r\nimport {\r\n  DELETE_EQUIPMENT,\r\n  EDIT_EQUIPMENT,\r\n  ADD_EQUIPMENT\r\n} from \"../store/constants\";\r\n\r\nexport function* watchEditSaga() {\r\n  yield takeEvery(EDIT_EQUIPMENT, editEquipmentSaga);\r\n}\r\n\r\nexport function* watchDeleteSaga() {\r\n  yield takeEvery(DELETE_EQUIPMENT, deleteEquipmentSaga);\r\n}\r\n\r\nexport function* watchAddSaga() {\r\n  yield takeEvery(ADD_EQUIPMENT, addEquipmentSaga);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport getEquipmentSaga from \"./getEquipmentSaga\";\r\nimport getStructureSaga from \"./getStructureSaga\";\r\n// eslint-disable-next-line import/named\r\nimport { watchEditSaga, watchDeleteSaga, watchAddSaga } from \"./watchSagas\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    getStructureSaga(),\r\n    getEquipmentSaga(),\r\n    watchEditSaga(),\r\n    watchDeleteSaga(),\r\n    watchAddSaga()\r\n  ]);\r\n}\r\n","import Scorocode from \"scorocode\";\n\nexport default () =>\n  Scorocode.Init({\n    ApplicationID: \"3196b2e873234547ad8b06ed636d3538\",\n    JavaScriptKey: \"5e85f685a23e44e6abad95accc1dd2ea\",\n    MasterKey: \"659d718ff9664f6fafbdb79efc93cb34\"\n  });\n","import {\n  ADD_EQUIPMENT,\n  DELETE_EQUIPMENT,\n  EDIT_EQUIPMENT,\n  SET_EQUIPMENT,\n  SET_IS_ADDING,\n  SET_IS_ROOM,\n  SET_STRUCTURE,\n  SHOW_EQUIPMENT\n} from \"../constants/index\";\n\nconst setReducer = (\n  state = {\n    structure: [],\n    equipment: {},\n    showEquipArray: [],\n    postItemData: {},\n    isRoom: false,\n    isAddingOn: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case SET_STRUCTURE:\n      return { ...state, structure: action.structure };\n    case SET_EQUIPMENT:\n      return { ...state, equipment: action.equipment };\n    case SHOW_EQUIPMENT:\n      return { ...state, showEquipArray: action.idArray };\n    case EDIT_EQUIPMENT:\n    case DELETE_EQUIPMENT:\n    case ADD_EQUIPMENT:\n      return { ...state, postItemData: action.data };\n    case SET_IS_ROOM:\n      return { ...state, isRoom: action.isRoom };\n    case SET_IS_ADDING:\n      return { ...state, isAddingOn: action.isAdding };\n    default:\n      return state;\n  }\n};\n\nexport default setReducer;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => (\r\n  <div className=\"header\">\r\n    <h1 className=\"header__title\">Менеджер оборудования</h1>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <span className=\"footer__text\">\r\n      Created by{\" \"}\r\n      <a href=\"https://github.com/LonelyDutchhound\">Lonely Dutchhound</a>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","const idArrayCreator = unit => {\r\n  const idArray = [];\r\n  idArray.push(unit.id);\r\n  if (unit.rooms) {\r\n    unit.rooms.forEach(room =>\r\n      idArrayCreator(room).forEach(elem => idArray.push(elem))\r\n    );\r\n  }\r\n  return idArray;\r\n};\r\n\r\nexport default idArrayCreator;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SmallButton = ({ style, onClick, name, className }) => {\r\n  return (\r\n    <button type=\"button\" className={className} style={style} onClick={onClick}>\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SmallButton;\r\n","export const RED = \"#d81200\";\r\nexport const GREEN = \"#00d87e\";\r\nexport const WHITE = \"#ffffff\";\r\nexport const BLUE = \"#96b2b2\";\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport idArrayCreator from \"../../utils/supportUtils/idArrayCreator\";\r\nimport { setRoom, showEquipment } from \"../../store/actions/equipmentActions\";\r\nimport SmallButton from \"../SmallButton\";\r\nimport { GREEN, RED } from \"../styleConstants\";\r\nimport \"./style.css\";\r\n\r\nconst StructureUnit = ({ unit, showRelEquipment, setIsRoom, isAddingOn }) => {\r\n  const { name, rooms, id } = unit;\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsOpened(!isOpened);\r\n  };\r\n\r\n  const handleChange = () => {\r\n    const equipIdArray = idArrayCreator(unit);\r\n    if (unit.rooms) setIsRoom(false);\r\n    else setIsRoom(id);\r\n    showRelEquipment(equipIdArray);\r\n  };\r\n\r\n  const createSubUnit = () => {\r\n    return rooms.map(room => (\r\n      <StructureUnit\r\n        unit={room}\r\n        showRelEquipment={showRelEquipment}\r\n        setIsRoom={setIsRoom}\r\n        isAddingOn={isAddingOn}\r\n        key={room.id}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li className=\"list__item\">\r\n        {rooms ? (\r\n          <SmallButton\r\n            className=\"item__button\"\r\n            style={\r\n              isOpened ? { backgroundColor: RED } : { backgroundColor: GREEN }\r\n            }\r\n            name={isOpened ? \"\\u25BD\" : \"\\u25B7\"}\r\n            onClick={handleClick}\r\n          />\r\n        ) : null}\r\n        <label className=\"item__label\" htmlFor={id}>\r\n          <input\r\n            id={id}\r\n            className=\"item__selector\"\r\n            type=\"radio\"\r\n            name=\"unit\"\r\n            disabled={isAddingOn}\r\n            onChange={handleChange}\r\n          />\r\n          <p className=\"item__title\">{name}</p>\r\n        </label>\r\n      </li>\r\n      <ul className=\"panel__list\">\r\n        {isOpened && rooms && rooms.length !== 0 ? createSubUnit() : null}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAddingOn: state.isAddingOn\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showRelEquipment: idArray => dispatch(showEquipment(idArray)),\r\n  setIsRoom: isRoom => dispatch(setRoom(isRoom))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StructureUnit);\r\n","import {\r\n  SHOW_EQUIPMENT,\r\n  ADD_EQUIPMENT,\r\n  EDIT_EQUIPMENT,\r\n  DELETE_EQUIPMENT,\r\n  SET_IS_ROOM,\r\n  SET_IS_ADDING\r\n} from \"../constants\";\r\n\r\nconst showEquipment = idArray => ({\r\n  type: SHOW_EQUIPMENT,\r\n  idArray\r\n});\r\n\r\nconst addEquipment = (name, quantity) => ({\r\n  type: ADD_EQUIPMENT,\r\n  data: {\r\n    name,\r\n    quantity\r\n  }\r\n});\r\n\r\nconst editEquipment = (id, name, quantity, room) => ({\r\n  type: EDIT_EQUIPMENT,\r\n  data: {\r\n    id,\r\n    name,\r\n    quantity,\r\n    room\r\n  }\r\n});\r\n\r\nconst deleteEquipment = id => ({\r\n  type: DELETE_EQUIPMENT,\r\n  data: { id }\r\n});\r\n\r\nconst setRoom = isRoom => ({\r\n  type: SET_IS_ROOM,\r\n  isRoom\r\n});\r\n\r\nconst isAddingOn = isAdding => ({\r\n  type: SET_IS_ADDING,\r\n  isAdding\r\n});\r\n\r\nexport {\r\n  showEquipment,\r\n  addEquipment,\r\n  editEquipment,\r\n  deleteEquipment,\r\n  setRoom,\r\n  isAddingOn\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport StructureUnit from \"../StructureUnit\";\r\n\r\nconst StructureList = ({ unitList }) => {\r\n  const structureUnit = unitList.map(unit => (\r\n    <StructureUnit unit={unit} key={unit.id} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <ul className=\"panel__list\">{structureUnit}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StructureList;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst QuantityInput = ({ readOnly, quantity, onChange }) => {\r\n  return (\r\n    <input\r\n      readOnly={readOnly}\r\n      className=\"item__quantity\"\r\n      type=\"number\"\r\n      value={quantity}\r\n      min=\"1\"\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default QuantityInput;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SmallButton from \"../SmallButton\";\r\nimport QuantityInput from \"../QuantityInput\";\r\nimport { RED, BLUE, GREEN } from \"../styleConstants\";\r\nimport \"./style.css\";\r\nimport {\r\n  deleteEquipment,\r\n  editEquipment\r\n} from \"../../store/actions/equipmentActions\";\r\n\r\nconst EquipmentUnit = ({\r\n  unit,\r\n  editEquipQuantity,\r\n  deleteEquipmentItem,\r\n  isRoom\r\n}) => {\r\n  const { id, name, count, room } = unit;\r\n  const [quantity, setQuantity] = useState(count);\r\n  const [isEditable, setEditable] = useState(false);\r\n\r\n  const handleChange = e => setQuantity(e.target.value);\r\n\r\n  const handleClickEdit = () => {\r\n    if (isEditable) editEquipQuantity(id, name, quantity, room);\r\n    setEditable(!isEditable);\r\n  };\r\n\r\n  const handleClickDelete = () => {\r\n    deleteEquipmentItem(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li className=\"list__item\">\r\n        <p className=\"item__title\">{name}</p>\r\n        <QuantityInput\r\n          readOnly={!isEditable}\r\n          quantity={quantity}\r\n          onChange={handleChange}\r\n        />\r\n        {isRoom ? (\r\n          <>\r\n            <SmallButton\r\n              className=\"item__button\"\r\n              style={{ backgroundColor: isEditable ? GREEN : BLUE }}\r\n              name={isEditable ? \"\\u2611\" : \"\\u270E\"}\r\n              onClick={handleClickEdit}\r\n            />\r\n            <SmallButton\r\n              className=\"item__button\"\r\n              style={{ backgroundColor: RED }}\r\n              name={\"\\u1CF5\"}\r\n              onClick={handleClickDelete}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isRoom: state.isRoom\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  editEquipQuantity: (id, name, count, room) =>\r\n    dispatch(editEquipment(id, name, count, room)),\r\n  deleteEquipmentItem: id => dispatch(deleteEquipment(id))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentUnit);\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst TextInput = ({ name, onChange, isInputError }) => {\r\n  return (\r\n    <input\r\n      style={isInputError}\r\n      className=\"item__input\"\r\n      type=\"text\"\r\n      value={name}\r\n      onChange={onChange}\r\n      placeholder=\"Наименование\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport TextInput from \"../TextInput\";\r\nimport QuantityInput from \"../QuantityInput\";\r\nimport SmallButton from \"../SmallButton\";\r\nimport { GREEN, RED } from \"../styleConstants\";\r\nimport { addEquipment } from \"../../store/actions/equipmentActions\";\r\n\r\nconst AddUnit = ({ handleCancel, handleClickAddButton, addNewEquipment }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"1\");\r\n  const [error, setError] = useState(false);\r\n  const onTextChange = ({ target: { value } }) => setName(value);\r\n  const onQuantityChange = ({ target: { value } }) => setQuantity(value);\r\n  const errorMessage = \"Введите правильные данные или отмените операцию\";\r\n  const handleClickAdd = () => {\r\n    if (name && name.match(/^[А-Яа-я]+[0-9]*/) && quantity > 0) {\r\n      setError(false);\r\n      addNewEquipment(name, quantity);\r\n      handleClickAddButton();\r\n    } else setError(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list__wrapper\">\r\n      <div className=\"list__item\">\r\n        <TextInput value={name} onChange={onTextChange} />\r\n        <QuantityInput\r\n          readOnly={false}\r\n          quantity={quantity}\r\n          onChange={onQuantityChange}\r\n        />\r\n        <SmallButton\r\n          className=\"item__button\"\r\n          style={{ backgroundColor: GREEN }}\r\n          name={\"\\u2611\"}\r\n          onClick={handleClickAdd}\r\n        />\r\n        <SmallButton\r\n          className=\"item__button\"\r\n          style={{ backgroundColor: RED }}\r\n          name={\"\\u1CF5\"}\r\n          onClick={handleCancel}\r\n        />\r\n      </div>\r\n      <p className=\"list__error\">{error ? errorMessage : null}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addNewEquipment: (name, quantity) => dispatch(addEquipment(name, quantity))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddUnit);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport EquipmentUnit from \"../EquipmentUnit\";\r\nimport SmallButton from \"../SmallButton\";\r\nimport AddUnit from \"../AddUnit\";\r\nimport { isAddingOn } from \"../../store/actions/equipmentActions\";\r\n\r\nconst EquipmentList = ({ unitList, startText, isRoom, setIsAddingOn }) => {\r\n  const equipmentUnit = !startText\r\n    ? unitList.map(unit => <EquipmentUnit unit={unit} key={unit.id} />)\r\n    : startText;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  const handleCancel = async () => {\r\n    await setIsAdding(false);\r\n    setIsAddingOn(!isAdding);\r\n  };\r\n  const handleClickAddButton = async () => {\r\n    await setIsAdding(!isAdding);\r\n    setIsAddingOn(!isAdding);\r\n  };\r\n  const addUnit = (\r\n    <AddUnit\r\n      handleCancel={handleCancel}\r\n      handleClickAddButton={handleClickAddButton}\r\n    />\r\n  );\r\n  return (\r\n    <div className=\"panel\">\r\n      <ul className=\"panel__list\">{equipmentUnit}</ul>\r\n      {isRoom && !isAdding ? (\r\n        <SmallButton\r\n          name=\"Добавить оборудование\"\r\n          className=\"panel__button_add\"\r\n          style={null}\r\n          onClick={handleClickAddButton}\r\n        />\r\n      ) : null}\r\n      {isAdding ? addUnit : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setIsAddingOn: isAdding => dispatch(isAddingOn(isAdding))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(EquipmentList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport EquipmentList from \"../../EquipmentList\";\r\n\r\nconst EquipmentListContainer = ({ equipment, showEquipArray, isRoom }) => {\r\n  const startText = (\r\n    <p className=\"message\">\r\n      Выберите здание/помещение для просмотра оборудования\r\n    </p>\r\n  );\r\n\r\n  if (showEquipArray.length === 0)\r\n    return <EquipmentList unitList={null} startText={startText} />;\r\n  const equipUnitList = Object.entries(equipment).reduce((accum, next) => {\r\n    const [key, value] = next;\r\n    if (showEquipArray.includes(key)) return [...accum, ...value];\r\n    return accum;\r\n  }, []);\r\n  return <EquipmentList unitList={equipUnitList} isRoom={isRoom} />;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  equipment: state.equipment,\r\n  showEquipArray: state.showEquipArray,\r\n  isRoom: state.isRoom\r\n});\r\n\r\nexport default connect(mapStateToProps)(EquipmentListContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport StructureList from \"../../StructureList\";\r\nimport EquipmentListContainer from \"../EquipmentListContainer\";\r\n\r\nconst ListContainer = ({ structure }) => (\r\n  <div className=\"container\">\r\n    <StructureList unitList={structure} />\r\n    <EquipmentListContainer />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  structure: state.structure\r\n});\r\n\r\nexport default connect(mapStateToProps)(ListContainer);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\n\nimport rootSaga from \"./sagas/rootSaga\";\nimport Auth from \"./utils/APIUtils/auth\";\nimport configureStore from \"./store/configureStore\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport ListContainer from \"./components/Containers/ListContainer\";\n\nAuth();\nconst store = configureStore();\nstore.runSaga(rootSaga);\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <ListContainer />\n        <Footer />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport setReducer from \"./reducers/setReducer\";\r\n\r\nexport default function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  return {\r\n    ...createStore(\r\n      setReducer,\r\n      composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n    ),\r\n    runSaga: sagaMiddleware.run\r\n  };\r\n}\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\n// eslint-disable-next-line no-undef\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}